{"version":3,"file":"index.js","sources":["src/checkers/isAction.js","src/selectors/index.js","src/url-pattern/utils.js","src/url-pattern/addPathParams.js","src/url-pattern/addQueryParams.js","src/url-pattern/index.js","src/mappers/mapToFetch.js","src/mappers/mapToData.js","src/roadhog.js"],"sourcesContent":["export default (action) => {\n  if (!/.*_.*/.test(action)) {\n    throw new Error(`Wrong format for action: '${action}'. should be '<METHOD_NAME>_<RESOURCE_NAME>' (ie: GET_USERS)`)\n  }\n}\n\n","export const getConfig = ({ config }) => config\nexport const getAPI = state => getConfig(state).api\nexport const getMocks = state => getConfig(state).mocks\nexport const getResource = name => state => getAPI(state)[name]\n\nexport const getMethod = name => methodName => state => getResource(name)(state)[methodName]\n\nexport const getOptions = name => methodName => (state) => {\n  // raw data\n  const api = getAPI(state)\n  const resource = getResource(name)(state)\n  const method = getMethod(name)(methodName)(state)\n\n  // order is general -> specific\n  let options = { method: methodName }\n  if (api.options) options = { ...options, ...api.options }\n  if (resource.options) options = { ...options, ...resource.options }\n  if (method && method.options) options = { ...options, ...method.options }\n\n  return options\n}\n\nexport const getURL = name => methodName => (state) => {\n  // raw data\n  const resource = getResource(name)(state)\n  const method = getMethod(name)(methodName)(state)\n\n  if (method === undefined) return resource // example: { TODOS: '/api/todos' }\n  if (typeof method === 'string') return method // example : { TODOS: { GET: '/api/todos' } }\n  return method.url // example: { TODOS: { GET: { url: '/api/todos' } } }\n}\n\nexport const getFallback = url => methodName => (state) => {\n  const mocks = getMocks(state)\n  if (!mocks) return undefined\n\n  // mock by priority\n  const orderedMocks = [\n    // same method first\n    ...mocks.filter(m => m.method === methodName),\n    // no method then\n    ...mocks.filter(m => m.method === undefined),\n    // other method last\n    ...mocks.filter(m => m.method !== methodName && m.method !== undefined),\n  ]\n\n  // looking for right mock\n  const mock = orderedMocks.find(m => m.match.test(url))\n\n  // returns fallback\n  return (mock || {}).fallback\n}\n","export const encodeParams = (params) => {\n  if (!Array.isArray(params)) return encodeURIComponent(params)\n  return params.map(param => encodeURIComponent(param))\n}\n\nexport const isEmpty = (o) => {\n  return !o ||\n    ((typeof o === 'object' && Object.keys(o).length === 0) ||\n    (Array.isArray(o) && o.length === 0))\n}\n","import { encodeParams, isEmpty } from './utils'\n\nexport default url => (pathParams) => {\n  if (isEmpty(pathParams)) return url\n  return `${url}${url.endsWith('/') ? '' : '/'}${encodeParams(pathParams).join('/')}`\n}\n","import { encodeParams, isEmpty } from './utils'\n\nexport default url => (queryParams) => {\n  if (isEmpty(queryParams)) return url\n\n  const params = Object.keys(queryParams)\n    .map((k => `${k}=${encodeParams(queryParams[k])}`))\n\n  const slash = (url.endsWith('/') || url.endsWith('&') || url.endsWith('?')) ? '' : '/'\n  const questionMark = (url.endsWith('&') || url.endsWith('?')) ? '' : '?'\n\n  return `${url}${slash}${questionMark}${params.join('&')}`\n}\n","// FIXME : this code could be replaced with this lib if the bundle is not too big:\n// path : https://github.com/snd/url-pattern\n// query : https://github.com/ljharb/qs\nexport { default as addPathParams } from './addPathParams'\nexport { default as addQueryParams } from './addQueryParams'\n","import { select } from 'redux-saga/effects'\nimport { getOptions, getURL } from '../selectors'\nimport { addPathParams, addQueryParams } from '../url-pattern'\n\nexport default action => function* (inputs = {}) {\n  // action pattern is `<METHOD_NAME>_<RESOURCE_NAME>`\n  const [methodName, name] = action.split(/_(.+)/)\n\n  // create a fetch options object\n  let options = yield select(getOptions(name)(methodName))\n\n  // body\n  // - body is an object : use JSON.stringify\n  // - body is a string : let it that way\n  const { body } = inputs\n  if (typeof body === 'string') options = { ...options, body }\n  else options = { ...options, body: JSON.stringify(body) }\n\n  // create a fetch url\n  let url = yield select(getURL(name)(methodName))\n  url = addPathParams(url)(inputs.path)\n  url = addQueryParams(url)(inputs.query)\n\n  return [url, options]\n}\n","export default fallback => function* (raw) {\n  if (!raw.ok && fallback) return fallback\n  if (raw.status !== 204) return yield raw.json()\n  return undefined\n}\n","import { select, put } from 'redux-saga/effects'\nimport { isAction } from './checkers'\nimport { mapToFetch, mapToData } from './mappers'\nimport { getFallback } from './selectors'\n\nconst apiEvent = (name, suffix, payload) => ({ type: `API_${name}_${suffix}`, payload })\n\n/**\n * Library that is connected to redux, use to fetch api, and to dispatch saga event\n * @param {string} action -\n *   the template of action is like this '<METHOD_NAME>_<RESOURCE_NAME>' => GET_USERS\n * @param {object} inputs -\n *   object contains body, query and path params => {body, query: {id: 1}, path: [user, 132]}\n * @return {object} - api response or fallback define on redux.\n */\nexport default action => function* (inputs) {\n  // check action pattern and eventually throw errors\n  isAction(action)\n\n  // get fetch options to make a fetch callback\n  const [url, options] = yield mapToFetch(action)(inputs)\n\n  // get the fallback (5XX errors)\n  const fallback = yield select(getFallback(url)(options.method))\n\n  // get the raw response, from tracer or from fetch\n  yield put(apiEvent(action, 'STARTED'))\n  const raw = yield fetch(url, options)\n\n  // retrieve data (either from request, either from mock -fallback-)\n  const data = yield mapToData(fallback)(raw)\n  if (!raw.ok && !fallback) yield put(apiEvent(action, 'ERROR', { raw, data, status: raw.status, statusText: raw.statusText }))\n\n  // return json response or fallback\n  yield put(apiEvent(action, 'END', { raw, data }))\n  return data\n}\n"],"names":["action","test","Error","getConfig","config","getAPI","state","api","getMocks","mocks","getResource","name","getMethod","methodName","getOptions","resource","method","options","getURL","undefined","url","getFallback","orderedMocks","filter","m","mock","find","match","fallback","encodeParams","params","Array","isArray","encodeURIComponent","map","param","isEmpty","o","Object","keys","length","pathParams","endsWith","join","queryParams","k","slash","questionMark","inputs","split","select","body","JSON","stringify","addPathParams","path","addQueryParams","query","raw","ok","status","json","apiEvent","suffix","payload","type","mapToFetch","put","fetch","mapToData","data","statusText"],"mappings":"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"}